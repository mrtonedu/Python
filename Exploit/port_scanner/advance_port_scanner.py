#!/usr/bin/pyhton
#import socket
from socket import *
import optparse
from threading import *


def scan(tgHost,tgPort):
    try:
        ss=socket(AF_INET,SOCK_STREAM)
        ss.connect((tgHost,tgPort))
        print(f"[+] {tgPort} /tcp port is Opened" )
    except:
        print(f"[+] {tgPort} /tcp port is Closed" )
    finally:
        ss.close()


def port_scanner(tgHost,tgPort):
    try:
        tgIP=gethostbyname(tgHost)
        print(f"[+] {tgHost} ning IP addresi: {tgIP}")
    except:
        print(f"[+] {tgHost} ning IP addresi topilmadi.")

    try:
        tgName=gethostbyaddr(tgIP)
        print(f"[+] {tgName[0]} uchun Scanner natijalari:")
    except:
        print(f"[+] {tgIP} uchun Scanner natijalari:")

    setdefaulttimeout(1)
    for port in tgPort:
        t=Thread(target=scan,args=(tgIP,int(port)))
        t.start()


def main():
        parser=optparse.OptionParser("**MRTON**\nIshlatilishi:advance_port_scanner.py 127.0.0.1 22")
        parser.add_option("-t",dest="targetHost",type="string",help="IP addresni aniqlashtring..")
        parser.add_option("-p",dest="targetPort",type='string',help="Nishoni portini aniqlashtiring..")
        options, args = parser.parse_args()
        tgHost=options.targetHost
        tgPort=str(options.targetPort).split(',')

        if (tgPort==None) or (tgHost==None):
            print(parser.usage)
            exit()
        else:
           port_scanner(tgHost,tgPort)




if __name__=="__main__":
    main()